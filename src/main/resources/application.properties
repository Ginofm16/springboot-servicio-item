spring.application.name = servicio-items
#tiene su puerto fijo aun porque se lo necesita para acceder al endpoint
server.port = 8002

#aca aun esta acoplado el servidor con el puerto, esto con Eureka desaparece, poruqe se 
#abstrae 100% estos parametros de la ubicacion del microservicio y estos se registran en el
#servidor de nombre Eureka; cada microservicio cuando se conecta y se registra en el servidor
#Eureka va obtener la lista con los diferentes microservicio registrados donde tendrs la informacion
#automatica de la ubicacion del nombre de la maquina y los puertos en los que estan desplegados cada microservicio
#> servicio-productos.ribbon.listOfServers = localhost:8001, localhost:9001

eureka.client.service-url.defaultZone = http://localhost:8761/eureka

#configurar aca lo del timeout porque aca se esta utilizando hystrix y ribbon, como hystrix envuelve a ribbom 
#lo ideal es que hystrix tenga un tiempo mayor que ribbon
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 15000
#ribbon.ConnectTimeout: 3000
#ribbon.ReadTimeout: 10000

#cambiar la probabilidad en la que se va enviar la traza por defecto en el 10% de los request va exportar
#la traza a Zipkin, la idea es que la exporte siempre en cada request
spring.sleuth.sampler.probability =1.0
#configurar la ruta del servidor Zipkin, esto es opcional ya que por defecto va buscar con esa ruta 9411
spring.zipkin.base-url=http://localhost:9411/
